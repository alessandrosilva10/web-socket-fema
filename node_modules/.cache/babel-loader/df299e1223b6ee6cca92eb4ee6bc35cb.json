{"ast":null,"code":"import _classCallCheck from \"/home/alessandro/Desktop/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/alessandro/Desktop/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/alessandro/Desktop/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/alessandro/Desktop/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/alessandro/Desktop/frontend/src/views/examples/Login.js\";\n\n/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { withCookies } from \"react-cookie\";\nimport { Cookies } from \"js-cookie\"; // reactstrap components\n\nimport { Button, Card, CardHeader, CardBody, FormGroup, Form, Input, InputGroupAddon, InputGroupText, InputGroup, Row, Col } from \"reactstrap\";\n\nvar Login = /*#__PURE__*/function (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  var _super = _createSuper(Login);\n\n  function Login() {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      credentials: {\n        username: '',\n        password: ''\n      }\n    };\n\n    _this.inputChange = function (event) {\n      var credentials = _this.state.credentials;\n      credentials[event.target.name] = event.target.value;\n\n      _this.setState({\n        credentials: credentials\n      });\n    };\n\n    _this.login = function (event) {\n      fetch('http://127.0.0.1:8000/auth/', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: _this.state.credentials.username,\n          password: _this.state.credentials.password\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        var token = res.token;\n        alert(_this.state.credentials.username);\n        alert(token);\n\n        _this.props.cookies.set('token', token);\n\n        window.location.href = \"/admin/index\";\n      }).catch(function (error) {\n        alert(error);\n        alert('error');\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n        method: \"post\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        for: \"fname\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }, \"First name:\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 49\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"fname\",\n        name: \"fname\",\n        value: \"John\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 68\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        for: \"lname\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }\n      }, \"Last name:\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 48\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"lname\",\n        name: \"lname\",\n        value: \"Doe\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 67\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 72\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        onClick: this.login,\n        value: \"Submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return Login;\n}(React.Component);\n\nexport default withCookies(Login);","map":{"version":3,"sources":["/home/alessandro/Desktop/frontend/src/views/examples/Login.js"],"names":["React","withCookies","Cookies","Button","Card","CardHeader","CardBody","FormGroup","Form","Input","InputGroupAddon","InputGroupText","InputGroup","Row","Col","Login","state","credentials","username","password","inputChange","event","target","name","value","setState","login","fetch","method","headers","body","JSON","stringify","then","res","json","token","alert","props","cookies","set","window","location","href","catch","error","Component"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { withCookies } from \"react-cookie\";\nimport { Cookies } from \"js-cookie\";\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Row,\n  Col\n} from \"reactstrap\";\n\nclass Login extends React.Component {\n\n  state = {\n    credentials: {\n      username: '',\n      password: ''\n    }\n  }\n\n  inputChange = event => {\n    let credentials = this.state.credentials;\n    credentials[event.target.name] = event.target.value;\n    this.setState({credentials: credentials});\n\n  }\n\n\n\n  login = event => {\n    fetch('http://127.0.0.1:8000/auth/', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        username: this.state.credentials.username,\n        password: this.state.credentials.password,\n      })\n    })\n    .then(res => res.json()).then(res => {\n    let token = res.token;\n    alert(this.state.credentials.username)\n    alert(token)\n    this.props.cookies.set('token', token);\n    window.location.href = \"/admin/index\";\n}).catch(error => {\n      alert(error)\n      alert('error');\n    })\n  }\n  render() {\n    return (\n      <>\n         <form method=\"post\">\n          <label for=\"fname\">First name:</label><br/>\n          <input type=\"text\" id=\"fname\" name=\"fname\" value=\"John\"/><br/>\n          <label for=\"lname\">Last name:</label><br/>\n          <input type=\"text\" id=\"lname\" name=\"lname\" value=\"Doe\"/><br/><br/>\n          <input type=\"submit\" onClick={this.login} value=\"Submit\"/>\n        </form>\n \n      </>\n    );\n  }\n}\n\nexport default withCookies(Login);\n\n"]},"metadata":{},"sourceType":"module"}