{"ast":null,"code":"import _regeneratorRuntime from \"/home/alessandro/Desktop/backend_almir/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/alessandro/Desktop/backend_almir/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar url = 'http://127.0.0.1:8000/api/v1/notes/';\nexport var fetchNotes = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(token) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", fetch(url, {\n              method: 'GET',\n              headers: {\n                'Authorization': \"Token \".concat(token) //'Authorization': `Token ${this.props.cookies.get('token')}`\n\n              }\n            }).then(function (resp) {\n              return resp.json();\n            }).then(\n            /*res => this.setState({notes: res}, */\n            function () {\n              //alert(this.state.notes)\n              console.log(this.state.notes);\n              console.log(this.props.cookies.get('token'));\n            }));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function fetchNotes(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var fetchNote = function fetchNote(id) {\n  return {\n    'id': 123,\n    'title': 'Hello',\n    'content': 'Testing'\n  };\n};\nexport var addNote = function addNote(note) {\n  return fetch(url, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json' // 'Authorization': `Token ${this.props.cookies.get('token')}`\n\n    },\n    body: JSON.stringify(note)\n  }).then(function (resp) {\n    return resp.json();\n  }).then(\n  /*res => data,*/\n  function () {\n    console.log(this.data);\n  });\n  return note;\n};\nexport var updateNote = function updateNote(note) {};","map":{"version":3,"sources":["/home/alessandro/Desktop/backend_almir/frontend/src/api.js"],"names":["url","fetchNotes","token","fetch","method","headers","then","resp","json","console","log","state","notes","props","cookies","get","fetchNote","id","addNote","note","Accept","body","JSON","stringify","data","updateNote"],"mappings":";;AAAA,IAAMA,GAAG,GAAG,qCAAZ;AAEA,OAAO,IAAMC,UAAU;AAAA,sEAAG,iBAAMC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA,6CACfC,KAAK,CAACH,GAAD,EAAM;AACdI,cAAAA,MAAM,EAAE,KADM;AAEdC,cAAAA,OAAO,EAAE;AACN,iDAA0BH,KAA1B,CADM,CAEP;;AAFO;AAFK,aAAN,CAAL,CAMFI,IANE,CAMI,UAAAC,IAAI;AAAA,qBAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,aANR,EAMyBF,IANzB;AAM+B;AAAuC,wBAAW;AAChF;AACAG,cAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,KAAvB;AACAH,cAAAA,OAAO,CAACC,GAAR,CAAY,KAAKG,KAAL,CAAWC,OAAX,CAAmBC,GAAnB,CAAuB,OAAvB,CAAZ;AACL,aAVI,CADe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVd,UAAU;AAAA;AAAA;AAAA,GAAhB;AAeP,OAAO,IAAMe,SAAS,GAAG,SAAZA,SAAY,CAACC,EAAD,EAAQ;AAC7B,SAAM;AACF,UAAM,GADJ;AAEF,aAAS,OAFP;AAGF,eAAW;AAHT,GAAN;AAKH,CANM;AAQP,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAU;AAC7B,SAAOhB,KAAK,CAACH,GAAD,EAAM;AACdI,IAAAA,MAAM,EAAE,MADM;AAEdC,IAAAA,OAAO,EAAE;AACNe,MAAAA,MAAM,EAAE,kBADF;AAEN,sBAAgB,kBAFV,CAGP;;AAHO,KAFK;AAOdC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf;AAPQ,GAAN,CAAL,CAQFb,IARE,CAQI,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,GARR,EAQyBF,IARzB;AAQ+B;AAAiB,cAAW;AAC9DG,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKc,IAAjB;AACD,GAVI,CAAP;AAYA,SAAOL,IAAP;AACH,CAdM;AAgBP,OAAO,IAAMM,UAAU,GAAG,SAAbA,UAAa,CAACN,IAAD,EAAU,CAEnC,CAFM","sourcesContent":["const url = 'http://127.0.0.1:8000/api/v1/notes/';\n\nexport const fetchNotes = async(token) => {\n    return fetch(url, {\n        method: 'GET',\n        headers: {\n           'Authorization': `Token ${token}`\n          //'Authorization': `Token ${this.props.cookies.get('token')}`\n        }\n      }).then( resp => resp.json()).then( /*res => this.setState({notes: res}, */function() {\n            //alert(this.state.notes)\n            console.log(this.state.notes)\n            console.log(this.props.cookies.get('token'))\n      })\n\n    }\n\nexport const fetchNote = (id) => {\n    return{\n        'id': 123,\n        'title': 'Hello',\n        'content': 'Testing'\n    }\n}\n\nexport const addNote = (note) => {\n    return fetch(url, {\n        method: 'POST',\n        headers: {\n           Accept: 'application/json',\n           'Content-Type': 'application/json',\n          // 'Authorization': `Token ${this.props.cookies.get('token')}`\n        },\n        body: JSON.stringify(note)\n      }).then( resp => resp.json()).then( /*res => data,*/ function() {\n        console.log(this.data)\n      })\n\n    return note;\n}\n\nexport const updateNote = (note) => {\n\n}\n"]},"metadata":{},"sourceType":"module"}